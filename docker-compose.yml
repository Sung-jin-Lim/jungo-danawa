version: "3.8"

services:
  # MongoDB service for data storage
  mongodb:
    image: mongo:latest
    container_name: jungo-danawa-mongodb
    restart: always
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    networks:
      - jungo-network

  # Redis for caching scraped data
  redis:
    image: redis:alpine
    container_name: jungo-danawa-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jungo-network

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: jungo-danawa-backend
    restart: always
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://root:example@mongodb:27017/jungo-danawa?authSource=admin
      - REDIS_URL=redis://redis:6379
      - PORT=5000
    networks:
      - jungo-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: jungo-danawa-frontend
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000/api
    networks:
      - jungo-network

networks:
  jungo-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
